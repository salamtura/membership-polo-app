<?php

namespace App\Nova;

use Illuminate\Http\Request;
use Laravel\Nova\Fields\Badge;
use Laravel\Nova\Fields\BelongsTo;
use Laravel\Nova\Fields\Date;
use Laravel\Nova\Fields\DateTime;
use Laravel\Nova\Fields\HasMany;
use Laravel\Nova\Fields\ID;
use Laravel\Nova\Fields\Number;
use Laravel\Nova\Fields\Select;
use Laravel\Nova\Fields\Text;
use Laravel\Nova\Http\Requests\NovaRequest;

class Chukker extends Resource
{
    /**
     * The model the resource corresponds to.
     *
     * @var class-string<\App\Models\Chukker>
     */
    public static $model = \App\Models\Chukker::class;

    /**
     * The single value that should be used to represent the resource when being displayed.
     *
     * @var string
     */
    public static $title = 'chukker_no';

    /**
     * The columns that should be searched.
     *
     * @var array
     */
    public static $search = [
        'chukker_no','chukker_date'
    ];

    /**
     * Get the fields displayed by the resource.
     *
     * @param  \Laravel\Nova\Http\Requests\NovaRequest  $request
     * @return array
     */
    public function fields(NovaRequest $request)
    {
        return [
            ID::make()->sortable(),
            Text::make('Chukker No')
                ->placeholder('AUTOGENERATED')
                ->help("This will be generated automatically")
                ->readonly(),
            Date::make('Chukker Date'),
            DateTime::make('Closing Time'),
            Select::make('Status')
                ->options([
                    'open' => 'Open',
                    'closed' => 'Closed',
                ])->onlyOnForms(),
            Badge::make('Status')->map([
                'open' => 'success',
                'closed' => 'danger',
            ]),
            Number::make('Bookings',function ($request){
                return \App\Models\ChukkerBooking::query('chukker_id','=',$this->id)->count();
            }),
            Text::make('Remarks')->hideFromIndex(),
            BelongsTo::make('User')
                ->onlyOnDetail(),

            HasMany::make('Chukker Booking'),
        ];
    }

    /**
     * Get the cards available for the request.
     *
     * @param  \Laravel\Nova\Http\Requests\NovaRequest  $request
     * @return array
     */
    public function cards(NovaRequest $request)
    {
        return [];
    }

    /**
     * Get the filters available for the resource.
     *
     * @param  \Laravel\Nova\Http\Requests\NovaRequest  $request
     * @return array
     */
    public function filters(NovaRequest $request)
    {
        return [];
    }

    /**
     * Get the lenses available for the resource.
     *
     * @param  \Laravel\Nova\Http\Requests\NovaRequest  $request
     * @return array
     */
    public function lenses(NovaRequest $request)
    {
        return [];
    }

    /**
     * Get the actions available for the resource.
     *
     * @param  \Laravel\Nova\Http\Requests\NovaRequest  $request
     * @return array
     */
    public function actions(NovaRequest $request)
    {
        return [];
    }
}
